name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_HOST: ${{ secrets.DB_HOST }}
      HASH_SALT: ${{ secrets.HASH_SALT }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      DOMAIN_NAME: drupal.madsnorgaard.net
      TRUSTED_HOST_PATTERNS: drupal.madsnorgaard.net
      WEBROOT_SITE: web
    steps:
      - name: 'Cleanup build folder'
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Create .env file
        run: |
          echo "DB_NAME=$DB_NAME" >> .env
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASS=$DB_PASS" >> .env
          echo "DB_HOST=$DB_HOST" >> .env
          echo "HASH_SALT=$HASH_SALT" >> .env
          echo "REDIS_HOST=$REDIS_HOST" >> .env
          echo "REDIS_PASSWORD=$REDIS_PASSWORD" >> .env
          echo "DOMAIN_NAME=$DOMAIN_NAME" >> .env
          echo "TRUSTED_HOST_PATTERNS=$TRUSTED_HOST_PATTERNS" >> .env
          echo "WEBROOT_SITE=$WEBROOT_SITE" >> .env

      - name: Create Docker network if not exists
        run: |
          docker network ls | grep -wq web || docker network create web

      - name: Start Docker containers
        run: docker-compose up -d

      - name: Run additional commands
        run: |
          echo "Add other actions to build, test, and deploy your project."

  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: build
    env:
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SERVER_IP: ${{ secrets.SERVER_IP }}

    steps:
      - name: Pull Docker images and start Docker containers
        run: |
          echo "Pulling Docker images and starting Docker containers..."
          ssh -i <(echo "${{ secrets.SSH_PRIVATE_KEY }}") -p $SSH_PORT $SSH_USERNAME@$SERVER_IP "cd /docker/drupal.madsnorgaard.net && docker-compose pull && docker-compose up -d"

      - name: Drupal updates
        run: |
          echo "Updating Drupal database, importing configuration, and rebuilding cache..."
          ssh -i <(echo "${{ secrets.SSH_PRIVATE_KEY }}") -p $SSH_PORT $SSH_USERNAME@$SERVER_IP "cd /docker/drupal.madsnorgaard.net && docker-compose exec -T madsnorgaard_drupal bash -c 'drush updb -y; drush cim -y; drush cr;'"
